@mixin opacity($opacity) {
    opacity: $opacity;
    filter: alpha(opacity=($opacity * 100));
}

@mixin column-width ( $value: 150px ) {
    -webkit-column-width: $value;
    -moz-column-width: $value;
    column-width: $value;
}

@mixin font-size($sizeValue: 12 ) {
    font-size: $sizeValue + px; //fallback for old browsers
    font-size: (0.125 * $sizeValue) + rem;
}

@mixin xPos($x) {
    -webkit-transform: translateX($x);
    -moz-transform: translateX($x);
    -ms-transform: translateX($x);
    transform: translateX($x);
}

/**
 * ensures that vertically aligned children don't appear blurry
 */
@mixin preserve-3d {
	-webkit-transform-style: preserve-3d;
  	-moz-transform-style: preserve-3d;
  	transform-style: preserve-3d;
}

// Alignment
@mixin vertical-align($position: relative) {
    position: $position;
    top: 50%;
    -webkit-transform: perspective(1px) translateY(-50%);
    -ms-transform: perspective(1px) translateY(-50%);
    transform: perspective(1px) translateY(-50%);
}

// Flex
@mixin flex-center() {
    align-items: center;
    display: flex;
    justify-content: center;
}

@mixin flexbox {
    display: -webkit-box; // old
    display: -moz-box; // old
    display: -ms-flexbox; // ie
    display: -webkit-flex; // new
    display: flex; // new
}

@mixin flex($values) {
    -webkit-box-flex: $values;
    -moz-box-flex: $values;
    -ms-flex: $values;
    -webkit-flex: $values;
    flex: $values;
}

@mixin flex-order($order) {
    -webkit-box-ordinal-group: $order; // old
    -moz-box-ordinal-group: $order; // old
    -ms-flex-order: $order; // ie
    -webkit-order: $order; // new
    order: $order; // new
}

@mixin flex-direction($direction) {
    @if $direction == column {
        -webkit-flex-direction: vertical;
        -moz-flex-direction: vertical;
        -ms-flex-direction: column;
        -webkit-flex-direction: column;
        flex-direction: column;
    }
    @else {
        -webkit-flex-direction: horizontal;
        -moz-flex-direction: horizontal;
        -ms-flex-direction: row;
        -webkit-flex-direction: row;
        flex-direction: row;
    }
}

@mixin gradient($start-color, $end-color, $orientation) {
    background: $start-color;

    @if $orientation == vertical {
        // vertical
        background: -moz-linear-gradient(top, $start-color 0%, $end-color 100%);
        background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,$start-color), color-stop(100%,$end-color));
        background: -webkit-linear-gradient(top, $start-color 0%,$end-color 100%);
        background: -o-linear-gradient(top, $start-color 0%,$end-color 100%);
        background: -ms-linear-gradient(top, $start-color 0%,$end-color 100%);
        background: linear-gradient(to bottom, $start-color 0%,$end-color 100%);
        filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='$start-color', endColorstr='$end-color',GradientType=0 );
    }
    @else if $orientation == horizontal {
        // horizontal
        background: -moz-linear-gradient(left, $start-color 0%, $end-color 100%);
        background: -webkit-gradient(linear, left top, right top, color-stop(0%,$start-color), color-stop(100%,$end-color));
        background: -webkit-linear-gradient(left, $start-color 0%,$end-color 100%);
        background: -o-linear-gradient(left, $start-color 0%,$end-color 100%);
        background: -ms-linear-gradient(left, $start-color 0%,$end-color 100%);
        background: linear-gradient(to right, $start-color 0%,$end-color 100%);
        filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='$start-color', endColorstr='$end-color',GradientType=1 );
    }
    @else {
        // radial
        background: -moz-radial-gradient(center, ellipse cover, $start-color 0%, $end-color 100%);
        background: -webkit-gradient(radial, center center, 0px, center center, 100%, color-stop(0%,$start-color), color-stop(100%,$end-color));
        background: -webkit-radial-gradient(center, ellipse cover, $start-color 0%,$end-color 100%);
        background: -o-radial-gradient(center, ellipse cover, $start-color 0%,$end-color 100%);
        background: -ms-radial-gradient(center, ellipse cover, $start-color 0%,$end-color 100%);
        background: radial-gradient(ellipse at center, $start-color 0%,$end-color 100%);
        filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='$start-color', endColorstr='$end-color',GradientType=1 );
    }
}

// Mobile device touch control
@mixin mobile-device-touch-control {
    .no-user-select, html, body * {
        -webkit-touch-callout: none;
    	-webkit-user-select: none;
        -khtml-user-select: none;
        -moz-user-select: -moz-none;
        -o-user-select: none;
        user-select: none;
        -ms-user-select: none
    }
    .has-user-select {
        -webkit-touch-callout: auto;
    	-webkit-user-select: auto;
        -khtml-user-select: auto;
        -moz-user-select: -moz-auto;
        -o-user-select: auto;
        user-select: auto;
        -ms-user-select: auto
    }
}

// Full page hack
@mixin full-page-hack{
    html, body {
        position: relative;
        width: 100%;
        height: 100%;
        padding: 0;
        margin: 0;
        overflow: initial;
    }
}

// Font smoothing hack
@mixin font-smoothing-hack{
    html, body {
        -webkit-font-smoothing: subpixel-antialiased !important;
        text-rendering: optimizeLegibility !important;
        text-shadow: 1px 1px 1px rgba(0,0,0,0.004);
    }
}

// Sets element as absolute
@mixin absolute-full {
    width: 100%;
	height: 100%;
	position: absolute;
	top: 0; left: 0;
}

// Full height
@mixin full-height {
    height: 100vh;
}

// adds media query to control element visibility
@mixin hidden-after($width) {
	@media (min-width: $width) {
		display: none;
	}
}

@mixin headers {
    h1,h2,h3,h4,h5,h6 {
        @content
    }
}
